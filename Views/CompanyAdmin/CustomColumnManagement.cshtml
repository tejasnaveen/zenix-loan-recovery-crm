@model List<LoanRecoveryCRM.Models.CustomColumn>
@{
    ViewData["Title"] = "Custom Column Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-columns me-2"></i>
                        Custom Column Management
                    </h4>
                    <small>Configure which columns to display on the Telecaller page</small>
                </div>
                <div class="card-body">
                    <!-- Default Columns Section -->
                    <div class="row mb-4">
                        <div class="col-md-8">
                            <h5 class="text-primary">
                                <i class="fas fa-list me-2"></i>
                                Default Columns
                            </h5>
                            <p class="text-muted">Enable/disable and rename default system columns</p>
                            
                            <div id="defaultColumns" class="border rounded p-3 bg-light">
                                @foreach (var column in Model.Where(c => !c.IsCustom))
                                {
                                    <div class="row align-items-center mb-3 column-item" data-id="@column.Id">
                                        <div class="col-md-1">
                                            <i class="fas fa-grip-vertical text-muted drag-handle"></i>
                                        </div>
                                        <div class="col-md-4">
                                            <input type="text" class="form-control column-display-name" 
                                                   value="@column.DisplayName" data-original="@column.DisplayName">
                                        </div>
                                        <div class="col-md-3">
                                            <span class="badge bg-secondary">@column.ColumnName</span>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-check form-switch">
                                                <input class="form-check-input column-active" type="checkbox" 
                                                       @(column.IsActive ? "checked" : "")>
                                                <label class="form-check-label">Active</label>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="badge @(column.IsActive ? "bg-success" : "bg-danger")">
                                                @(column.IsActive ? "Enabled" : "Disabled")
                                            </span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card border-info">
                                <div class="card-header bg-info text-white">
                                    <h6 class="mb-0">
                                        <i class="fas fa-eye me-2"></i>
                                        Live Preview
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-sm" id="previewTable">
                                            <thead class="table-dark">
                                                <tr id="previewHeaders">
                                                    <!-- Headers will be populated by JavaScript -->
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td colspan="100%" class="text-center text-muted">
                                                        Sample data will appear here
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Custom Columns Section -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h5 class="text-success">
                                <i class="fas fa-plus-circle me-2"></i>
                                Custom Columns
                            </h5>
                            <p class="text-muted">Add your own custom columns for additional data</p>
                            
                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <input type="text" id="customColumnName" class="form-control" 
                                           placeholder="Column Name (e.g., BranchName)">
                                </div>
                                <div class="col-md-4">
                                    <input type="text" id="customDisplayName" class="form-control" 
                                           placeholder="Display Name (e.g., Branch Name)">
                                </div>
                                <div class="col-md-4">
                                    <button type="button" class="btn btn-success" id="addCustomColumn">
                                        <i class="fas fa-plus me-2"></i>Add Custom Column
                                    </button>
                                </div>
                            </div>

                            <div id="customColumns" class="border rounded p-3 bg-light">
                                @foreach (var column in Model.Where(c => c.IsCustom))
                                {
                                    <div class="row align-items-center mb-3 custom-column-item" data-id="@column.Id">
                                        <div class="col-md-1">
                                            <i class="fas fa-grip-vertical text-muted drag-handle"></i>
                                        </div>
                                        <div class="col-md-4">
                                            <input type="text" class="form-control column-display-name" 
                                                   value="@column.DisplayName">
                                        </div>
                                        <div class="col-md-3">
                                            <span class="badge bg-success">@column.ColumnName</span>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-check form-switch">
                                                <input class="form-check-input column-active" type="checkbox" 
                                                       @(column.IsActive ? "checked" : "")>
                                                <label class="form-check-label">Active</label>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" class="btn btn-sm btn-danger delete-custom-column">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="row">
                        <div class="col-12">
                            <hr>
                            <button type="button" class="btn btn-primary btn-lg me-3" id="saveChanges">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                            <button type="button" class="btn btn-secondary btn-lg me-3" id="resetChanges">
                                <i class="fas fa-undo me-2"></i>Reset Changes
                            </button>
                            <button type="button" class="btn btn-info btn-lg" id="exportConfig">
                                <i class="fas fa-download me-2"></i>Export Configuration
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Success/Error Messages -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body">
                <i class="fas fa-check-circle me-2"></i>
                <span id="successMessage"></span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    </div>
    <div id="errorToast" class="toast align-items-center text-white bg-danger border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body">
                <i class="fas fa-exclamation-circle me-2"></i>
                <span id="errorMessage"></span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize sortable for drag and drop
            new Sortable(document.getElementById('defaultColumns'), {
                handle: '.drag-handle',
                animation: 150,
                onEnd: function() {
                    updatePreview();
                }
            });

            new Sortable(document.getElementById('customColumns'), {
                handle: '.drag-handle',
                animation: 150,
                onEnd: function() {
                    updatePreview();
                }
            });

            // Update preview when changes are made
            $(document).on('change', '.column-active, .column-display-name', function() {
                updatePreview();
            });

            // Add custom column
            $('#addCustomColumn').click(function() {
                var columnName = $('#customColumnName').val().trim();
                var displayName = $('#customDisplayName').val().trim();

                if (!columnName || !displayName) {
                    showError('Please enter both column name and display name.');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("AddCustomColumn", "CompanyAdmin")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        ColumnName: columnName,
                        DisplayName: displayName
                    }),
                    success: function(response) {
                        if (response.success) {
                            addCustomColumnToUI(response.column);
                            $('#customColumnName, #customDisplayName').val('');
                            showSuccess(response.message);
                            updatePreview();
                        } else {
                            showError(response.message);
                        }
                    },
                    error: function() {
                        showError('Error adding custom column.');
                    }
                });
            });

            // Delete custom column
            $(document).on('click', '.delete-custom-column', function() {
                var $item = $(this).closest('.custom-column-item');
                var columnId = $item.data('id');

                if (confirm('Are you sure you want to delete this custom column?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteCustomColumn", "CompanyAdmin")/' + columnId,
                        type: 'DELETE',
                        success: function(response) {
                            if (response.success) {
                                $item.remove();
                                showSuccess(response.message);
                                updatePreview();
                            } else {
                                showError(response.message);
                            }
                        },
                        error: function() {
                            showError('Error deleting custom column.');
                        }
                    });
                }
            });

            // Save changes
            $('#saveChanges').click(function() {
                var columns = [];
                
                $('.column-item, .custom-column-item').each(function(index) {
                    var $item = $(this);
                    columns.push({
                        Id: $item.data('id'),
                        DisplayName: $item.find('.column-display-name').val(),
                        IsActive: $item.find('.column-active').is(':checked'),
                        SortOrder: index + 1
                    });
                });

                $.ajax({
                    url: '@Url.Action("UpdateColumns", "CompanyAdmin")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(columns),
                    success: function(response) {
                        if (response.success) {
                            showSuccess(response.message);
                        } else {
                            showError(response.message);
                        }
                    },
                    error: function() {
                        showError('Error saving changes.');
                    }
                });
            });

            // Reset changes
            $('#resetChanges').click(function() {
                if (confirm('Are you sure you want to reset all changes?')) {
                    location.reload();
                }
            });

            // Export configuration
            $('#exportConfig').click(function() {
                var config = {
                    exportDate: new Date().toISOString(),
                    columns: []
                };

                $('.column-item, .custom-column-item').each(function() {
                    var $item = $(this);
                    config.columns.push({
                        Id: $item.data('id'),
                        DisplayName: $item.find('.column-display-name').val(),
                        IsActive: $item.find('.column-active').is(':checked')
                    });
                });

                var dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(config, null, 2));
                var downloadAnchorNode = document.createElement('a');
                downloadAnchorNode.setAttribute("href", dataStr);
                downloadAnchorNode.setAttribute("download", "column_config_" + new Date().toISOString().slice(0,10) + ".json");
                document.body.appendChild(downloadAnchorNode);
                downloadAnchorNode.click();
                downloadAnchorNode.remove();
            });

            // Initialize preview
            updatePreview();

            function addCustomColumnToUI(column) {
                var html = `
                    <div class="row align-items-center mb-3 custom-column-item" data-id="${column.id}">
                        <div class="col-md-1">
                            <i class="fas fa-grip-vertical text-muted drag-handle"></i>
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control column-display-name" value="${column.displayName}">
                        </div>
                        <div class="col-md-3">
                            <span class="badge bg-success">${column.columnName}</span>
                        </div>
                        <div class="col-md-2">
                            <div class="form-check form-switch">
                                <input class="form-check-input column-active" type="checkbox" checked>
                                <label class="form-check-label">Active</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-sm btn-danger delete-custom-column">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                `;
                $('#customColumns').append(html);
            }

            function updatePreview() {
                var headers = [];
                $('.column-item, .custom-column-item').each(function() {
                    var $item = $(this);
                    if ($item.find('.column-active').is(':checked')) {
                        headers.push($item.find('.column-display-name').val());
                    }
                });

                var headerHtml = headers.map(h => `<th>${h}</th>`).join('');
                $('#previewHeaders').html(headerHtml);
            }

            function showSuccess(message) {
                $('#successMessage').text(message);
                var toast = new bootstrap.Toast(document.getElementById('successToast'));
                toast.show();
            }

            function showError(message) {
                $('#errorMessage').text(message);
                var toast = new bootstrap.Toast(document.getElementById('errorToast'));
                toast.show();
            }
        });
    </script>
}

@section Styles {
    <style>
        .drag-handle {
            cursor: move;
        }
        
        .column-item, .custom-column-item {
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            padding: 0.75rem;
            margin-bottom: 0.5rem;
        }
        
        .column-item:hover, .custom-column-item:hover {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
        
        .sortable-ghost {
            opacity: 0.4;
        }
        
        #previewTable {
            font-size: 0.8rem;
        }
        
        .toast-container {
            z-index: 1055;
        }
    </style>
}