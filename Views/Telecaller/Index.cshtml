@{
    ViewData["Title"] = "Customer Management";
    var activeColumns = ViewBag.ActiveColumns as List<LoanRecoveryCRM.Models.CustomColumn>;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">
                            <i class="fas fa-users me-2"></i>
                            Customer Management
                        </h4>
                        <small>Manage customer data and interactions</small>
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-success dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fas fa-download me-2"></i>Export
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" onclick="exportData('csv')">
                                <i class="fas fa-file-csv me-2"></i>CSV
                            </a></li>
                            <li><a class="dropdown-item" href="#" onclick="exportData('excel')">
                                <i class="fas fa-file-excel me-2"></i>Excel
                            </a></li>
                            <li><a class="dropdown-item" href="#" onclick="exportData('pdf')">
                                <i class="fas fa-file-pdf me-2"></i>PDF
                            </a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Search and Filter Controls -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input type="text" class="form-control" id="searchInput" 
                                       placeholder="Search by customer name, loan ID, or mobile number...">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="pageSizeSelect">
                                <option value="10">10 per page</option>
                                <option value="25">25 per page</option>
                                <option value="50">50 per page</option>
                                <option value="100">100 per page</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-outline-secondary w-100" id="refreshData">
                                <i class="fas fa-sync-alt me-2"></i>Refresh
                            </button>
                        </div>
                    </div>

                    <!-- Loading Indicator -->
                    <div id="loadingIndicator" class="text-center py-4" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2 text-muted">Loading customer data...</p>
                    </div>

                    <!-- Customer Table -->
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="customerTable">
                            <thead class="table-dark">
                                <tr id="tableHeaders">
                                    <!-- Headers will be populated dynamically -->
                                </tr>
                            </thead>
                            <tbody id="customerTableBody">
                                <!-- Data will be populated dynamically -->
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div id="recordInfo" class="text-muted">
                                <!-- Record information will be populated -->
                            </div>
                        </div>
                        <div class="col-md-6">
                            <nav aria-label="Customer pagination">
                                <ul class="pagination justify-content-end" id="pagination">
                                    <!-- Pagination will be populated dynamically -->
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Customer Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="statusForm">
                    <input type="hidden" id="statusCustomerId">
                    <div class="mb-3">
                        <label for="customerStatus" class="form-label">Status</label>
                        <select class="form-select" id="customerStatus" required>
                            <option value="">Select Status</option>
                            <option value="Contacted">Contacted</option>
                            <option value="Promise to Pay">Promise to Pay</option>
                            <option value="Payment Made">Payment Made</option>
                            <option value="Dispute">Dispute</option>
                            <option value="Not Reachable">Not Reachable</option>
                            <option value="Wrong Number">Wrong Number</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="statusRemarks" class="form-label">Remarks</label>
                        <textarea class="form-control" id="statusRemarks" rows="3" 
                                  placeholder="Enter additional remarks..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveStatus">Save Status</button>
            </div>
        </div>
    </div>
</div>

<!-- Customer Details Modal -->
<div class="modal fade" id="customerDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Customer Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="customerDetailsContent">
                <!-- Customer details will be populated -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;
        let pageSize = 10;
        let currentSearch = '';
        let activeColumns = [];

        $(document).ready(function() {
            loadCustomerData();

            // Search functionality
            $('#searchInput').on('input', debounce(function() {
                currentSearch = $(this).val();
                currentPage = 1;
                loadCustomerData();
            }, 500));

            // Page size change
            $('#pageSizeSelect').change(function() {
                pageSize = parseInt($(this).val());
                currentPage = 1;
                loadCustomerData();
            });

            // Refresh data
            $('#refreshData').click(function() {
                loadCustomerData();
            });

            // Save status
            $('#saveStatus').click(function() {
                var customerId = $('#statusCustomerId').val();
                var status = $('#customerStatus').val();
                var remarks = $('#statusRemarks').val();

                if (!status) {
                    alert('Please select a status.');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("UpdateCustomerStatus", "Telecaller")',
                    type: 'POST',
                    data: {
                        customerId: customerId,
                        status: status + (remarks ? ' - ' + remarks : '')
                    },
                    success: function(response) {
                        if (response.success) {
                            $('#updateStatusModal').modal('hide');
                            loadCustomerData();
                            showToast('Status updated successfully!', 'success');
                        } else {
                            showToast(response.message, 'error');
                        }
                    },
                    error: function() {
                        showToast('Error updating status.', 'error');
                    }
                });
            });
        });

        function loadCustomerData() {
            $('#loadingIndicator').show();
            $('#customerTable').hide();

            $.ajax({
                url: '@Url.Action("GetCustomers", "Telecaller")',
                type: 'GET',
                data: {
                    page: currentPage,
                    pageSize: pageSize,
                    search: currentSearch
                },
                success: function(response) {
                    activeColumns = response.columns;
                    renderTable(response.data, response.columns);
                    renderPagination(response.currentPage, response.totalPages, response.totalRecords);
                    $('#loadingIndicator').hide();
                    $('#customerTable').show();
                },
                error: function() {
                    $('#loadingIndicator').hide();
                    showToast('Error loading customer data.', 'error');
                }
            });
        }

        function renderTable(customers, columns) {
            // Render headers
            var headerHtml = columns.map(col => `<th>${col.displayName}</th>`).join('');
            $('#tableHeaders').html(headerHtml);

            // Render data
            var bodyHtml = '';
            customers.forEach(function(customer) {
                bodyHtml += '<tr>';
                columns.forEach(function(column) {
                    if (column.columnName === 'Actions') {
                        bodyHtml += `
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <button type="button" class="btn btn-outline-primary" onclick="makeCall(${customer.id})">
                                        <i class="fas fa-phone"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-success" onclick="updateStatus(${customer.id})">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-info" onclick="viewDetails(${customer.id})">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </td>
                        `;
                    } else {
                        var value = getCustomerValue(customer, column.columnName);
                        bodyHtml += `<td>${value}</td>`;
                    }
                });
                bodyHtml += '</tr>';
            });
            $('#customerTableBody').html(bodyHtml);
        }

        function renderPagination(currentPage, totalPages, totalRecords) {
            var start = ((currentPage - 1) * pageSize) + 1;
            var end = Math.min(currentPage * pageSize, totalRecords);
            
            $('#recordInfo').html(`Showing ${start} to ${end} of ${totalRecords} entries`);

            var paginationHtml = '';
            
            // Previous button
            paginationHtml += `
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage - 1})">Previous</a>
                </li>
            `;

            // Page numbers
            var startPage = Math.max(1, currentPage - 2);
            var endPage = Math.min(totalPages, currentPage + 2);

            for (var i = startPage; i <= endPage; i++) {
                paginationHtml += `
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                    </li>
                `;
            }

            // Next button
            paginationHtml += `
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage + 1})">Next</a>
                </li>
            `;

            $('#pagination').html(paginationHtml);
        }

        function getCustomerValue(customer, columnName) {
            switch (columnName) {
                case 'CustomerName': return customer.customerName || '';
                case 'LoanId': return customer.loanId || '';
                case 'LoanAmount': return formatCurrency(customer.loanAmount);
                case 'MobileNo': return customer.mobileNo || '';
                case 'DPD': return customer.dpd || 0;
                case 'Outstanding': return formatCurrency(customer.outstanding);
                case 'POSAmount': return formatCurrency(customer.posAmount);
                case 'EMIAmount': return formatCurrency(customer.emiAmount);
                case 'PendingDues': return formatCurrency(customer.pendingDues);
                case 'PaymentLink': return customer.paymentLink ? `<a href="${customer.paymentLink}" target="_blank">Link</a>` : '';
                case 'BranchName': return customer.branchName || '';
                case 'LoanType': return customer.loanType || '';
                case 'Remarks': return customer.remarks || '';
                default: return '';
            }
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-IN', {
                style: 'currency',
                currency: 'INR'
            }).format(amount || 0);
        }

        function changePage(page) {
            if (page >= 1) {
                currentPage = page;
                loadCustomerData();
            }
        }

        function makeCall(customerId) {
            // Implement call functionality
            showToast('Call initiated for customer ID: ' + customerId, 'info');
        }

        function updateStatus(customerId) {
            $('#statusCustomerId').val(customerId);
            $('#customerStatus').val('');
            $('#statusRemarks').val('');
            $('#updateStatusModal').modal('show');
        }

        function viewDetails(customerId) {
            // Load and display customer details
            $('#customerDetailsContent').html(`
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            `);
            $('#customerDetailsModal').modal('show');
            
            // Simulate loading customer details
            setTimeout(function() {
                $('#customerDetailsContent').html(`
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Customer Information</h6>
                            <p><strong>Customer ID:</strong> ${customerId}</p>
                            <p><strong>Name:</strong> Sample Customer</p>
                            <p><strong>Mobile:</strong> +91 9876543210</p>
                        </div>
                        <div class="col-md-6">
                            <h6>Loan Information</h6>
                            <p><strong>Loan ID:</strong> LN001</p>
                            <p><strong>Amount:</strong> ₹50,000</p>
                            <p><strong>Outstanding:</strong> ₹25,000</p>
                        </div>
                    </div>
                `);
            }, 1000);
        }

        function exportData(format) {
            var url = '@Url.Action("ExportCustomers", "Telecaller")' + 
                      '?format=' + format + 
                      '&search=' + encodeURIComponent(currentSearch);
            
            window.open(url, '_blank');
        }

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        function showToast(message, type) {
            var toastClass = type === 'success' ? 'bg-success' : type === 'error' ? 'bg-danger' : 'bg-info';
            var toastHtml = `
                <div class="toast align-items-center text-white ${toastClass} border-0" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;
            
            var toastContainer = $('.toast-container');
            if (toastContainer.length === 0) {
                $('body').append('<div class="toast-container position-fixed top-0 end-0 p-3"></div>');
                toastContainer = $('.toast-container');
            }
            
            toastContainer.append(toastHtml);
            var toast = new bootstrap.Toast(toastContainer.find('.toast').last()[0]);
            toast.show();
        }
    </script>
}

@section Styles {
    <style>
        .table th {
            background-color: #343a40;
            color: white;
            font-weight: 600;
            border: none;
        }
        
        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.1);
        }
        
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
        
        .pagination .page-link {
            color: #007bff;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
        }
        
        .toast-container {
            z-index: 1055;
        }
        
        @media (max-width: 768px) {
            .table-responsive {
                font-size: 0.875rem;
            }
            
            .btn-group-sm .btn {
                padding: 0.125rem 0.25rem;
                font-size: 0.75rem;
            }
        }
    </style>
}